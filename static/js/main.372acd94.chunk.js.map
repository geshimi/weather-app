{"version":3,"sources":["store/types.ts","store/actions/alertActions.ts","store/actions/weatherActions.ts","components/Search/Search.tsx","components/Alert/Alert.tsx","components/Weather/Weather.tsx","App.tsx","store/reducers/weatherReducer.ts","store/reducers/alertReducer.ts","store/index.ts","index.tsx"],"names":["GET_WEATHER","SET_LOADING","SET_ERROR","SET_ALERT","setAlert","message","type","payload","API_KEY","Search","title","dispatch","useDispatch","useState","city","setCity","className","onSubmit","e","preventDefault","trim","a","console","log","fetch","res","ok","json","resData","Error","getWeather","value","onChange","currentTarget","Alert","onClose","onClick","Weather","data","fahrenheit","main","temp","toFixed","celsius","name","sys","country","weather","description","src","icon","alt","humidity","pressure","wind","speed","App","weatherData","useSelector","state","loading","error","alertMessage","alert","initialState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAAaA,EAAc,cACdC,EAAc,cACdC,EAAY,YACZC,EAAY,YCDZC,EAAW,SAACC,GACvB,MAAO,CACLC,KAAMH,EACNI,QAASF,I,yBCMPG,EAAU,mC,iBCyCDC,G,MAtCiB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3BC,EAAWC,cAD4B,EAErBC,mBAAS,IAFY,mBAEtCC,EAFsC,KAEhCC,EAFgC,KAoB7C,OACE,sBAAKC,UAAU,YAAf,UACE,6BAAKN,IACL,uBAAMM,UAAU,cAAcC,SAfZ,SAACC,GAGrB,GAFAA,EAAEC,iBAEkB,KAAhBL,EAAKM,OACP,OAAOT,EAASP,EAAS,qBAG3BO,EDgBK,CACLL,KAAML,IChBNU,EDjBsB,SACxBG,GAEA,8CAAO,WAAOH,GAAP,mBAAAU,EAAA,sEAGDC,QAAQC,IAAIf,GAHX,SAKegB,MAAM,qDAAD,OACgCV,EADhC,kBAC8CN,IANlE,WAKGiB,EALH,QASMC,GATN,iCAUmCD,EAAIE,OAVvC,aAUKC,EAVL,OAWK,IAAIC,MAAMD,EAAQvB,SAXvB,yBAcgCoB,EAAIE,OAdpC,QAcGC,EAdH,OAeHjB,EAAS,CACPL,KAAMN,EACNO,QAASqB,IAjBR,kDAoBHjB,EAAS,CACPL,KAAMJ,EACNK,QAAS,KAAIF,UAtBZ,0DAAP,sDCcWyB,CAAWhB,IACpBC,EAAQ,KAMN,UACE,uBACET,KAAK,OACLU,UAAU,eACVe,MAAOjB,EACPkB,SAxBc,SAACd,GACrBH,EAAQG,EAAEe,cAAcF,UAyBpB,qBAAKf,UAAU,aAAf,SACE,cAAC,IAAD,c,iBCfKkB,G,MAlBe,SAAC,GAA0B,IAAxB7B,EAAuB,EAAvBA,QAAS8B,EAAc,EAAdA,QACxC,OACE,sBAAKnB,UAAU,YAAf,UACE,qBAAKA,UAAU,WAAWoB,QAASD,IACnC,sBAAKnB,UAAU,aAAf,UACE,wBAAQA,UAAU,eAAlB,SACE,mBAAGA,UAAU,gBAAb,SAA8BX,MAEhC,iCACE,qBAAKW,UAAU,YAAf,SACE,cAAC,IAAD,CAAWoB,QAASD,gBCoCjBE,G,MAjDmB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC7BC,GAA+B,IAAjBD,EAAKE,KAAKC,KAAa,QAAQC,QAAQ,GACrDC,GAAWL,EAAKE,KAAKC,KAAO,QAAQC,QAAQ,GAElD,OACE,yBAAS1B,UAAU,UAAnB,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAIA,UAAU,QAAd,UACGsB,EAAKM,KADR,MACiBN,EAAKO,IAAIC,WAG1B,sBAAK9B,UAAU,UAAf,UACE,sBAAKA,UAAU,QAAf,UACE,mBAAGA,UAAU,UAAb,SAAwBsB,EAAKS,QAAQ,GAAGC,cACxC,4BACE,qBACEC,IAAG,2CAAsCX,EAAKS,QAAQ,GAAGG,KAAtD,QACHC,IAAI,eAKV,sBAAKnC,UAAU,cAAf,UACE,mBAAGA,UAAU,gBAAb,yBACA,8BAAIsB,EAAKE,KAAKC,KAAd,OACA,8BAAIF,EAAJ,OACA,8BAAII,EAAJ,UAGF,sBAAK3B,UAAU,WAAf,UACE,mBAAGA,UAAU,gBAAb,sBACA,4BAAIsB,EAAKE,KAAKY,cAGhB,sBAAKpC,UAAU,WAAf,UACE,mBAAGA,UAAU,gBAAb,sBACA,4BAAIsB,EAAKE,KAAKa,cAGhB,sBAAKrC,UAAU,OAAf,UACE,mBAAGA,UAAU,gBAAb,kBACA,8BAAIsB,EAAKgB,KAAKC,MAAd,uBCXGC,G,MAzBK,WAClB,IAAM7C,EAAWC,cACX6C,EAAcC,aAAY,SAACC,GAAD,OAAsBA,EAAMZ,QAAQT,QAC9DsB,EAAUF,aAAY,SAACC,GAAD,OAAsBA,EAAMZ,QAAQa,WAC1DC,EAAQH,aAAY,SAACC,GAAD,OAAsBA,EAAMZ,QAAQc,SACxDC,EAAeJ,aAAY,SAACC,GAAD,OAAsBA,EAAMI,MAAM1D,WAEnE,OACE,gCACE,cAAC,EAAD,CAAQK,MAAM,oBACbkD,EACC,4CAEAH,GAAe,cAAC,EAAD,CAASnB,KAAMmB,IAE/BK,GACC,cAAC,EAAD,CAAOzD,QAASyD,EAAc3B,QAAS,kBAAMxB,EAASP,EAAS,QAEhEyD,GACC,cAAC,EAAD,CAAOxD,QAASwD,EAAQ,MAAO1B,QAAS,kBAAMxB,EJkB7C,CACLL,KAAMJ,EACNK,QAAS,a,8BK7CPyD,EAA6B,CACjC1B,KAAM,KACNsB,SAAS,EACTC,MAAO,ICTHG,EAA2B,CAC/B3D,QAAS,ICIL4D,EAAcC,0BAAgB,CAClCnB,QFMa,WAAgE,IAA/DY,EAA8D,uDAAtDK,EAAcG,EAAwC,uCAC5E,OAAQA,EAAO7D,MACb,KAAKN,EACH,MAAO,CACLsC,KAAM6B,EAAO5D,QACbqD,SAAS,EACTC,MAAO,IAEX,KAAK5D,EACH,OAAO,2BACF0D,GADL,IAEEC,SAAS,IAEb,KAAK1D,EACH,OAAO,2BACFyD,GADL,IAEEE,MAAOM,EAAO5D,QACdqD,SAAS,IAGb,QACE,OAAOD,IE1BXI,MDHa,WAA4D,IAA3DJ,EAA0D,uDAAlDK,EAAcG,EAAoC,uCACxE,OAAQA,EAAO7D,MACb,KAAKH,EACH,MAAO,CACLE,QAAS8D,EAAO5D,SAEpB,QACE,OAAOoD,MCMES,EAPDC,sBACZJ,EACAK,8BAAoBC,0BAAgBC,OCRtCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJQ,SAASC,eAAe,W","file":"static/js/main.372acd94.chunk.js","sourcesContent":["export const GET_WEATHER = \"GET_WEATHER\";\r\nexport const SET_LOADING = \"SET_LOADING\";\r\nexport const SET_ERROR = \"SET_ERROR\";\r\nexport const SET_ALERT = \"SET_ALERT\";\r\n\r\nexport interface Weather {\r\n  description: string;\r\n  icon: string;\r\n  id: number;\r\n  main: string;\r\n}\r\n\r\nexport interface WeatherData {\r\n  base: string;\r\n  clouds: {\r\n    all: number;\r\n  };\r\n  cod: number;\r\n  coord: {\r\n    lon: number;\r\n    lat: number;\r\n  };\r\n  dt: number;\r\n  id: number;\r\n  main: {\r\n    feels_like: number;\r\n    humidity: number;\r\n    pressure: number;\r\n    temp: number;\r\n    temp_max: number;\r\n    temp_min: number;\r\n  };\r\n  name: string;\r\n  sys: {\r\n    country: string;\r\n    id: number;\r\n    sunrise: number;\r\n    sunset: number;\r\n    type: number;\r\n  };\r\n  timezone: number;\r\n  visibility: number;\r\n  weather: Weather[];\r\n  wind: {\r\n    speed: number;\r\n    deg: number;\r\n  };\r\n}\r\n\r\nexport interface WeatherError {\r\n  cod: string;\r\n  message: string;\r\n}\r\n\r\nexport interface WeatherState {\r\n  data: WeatherData | null;\r\n  loading: boolean;\r\n  error: string;\r\n}\r\n\r\ninterface GetWeatherAction {\r\n  type: typeof GET_WEATHER;\r\n  payload: WeatherData;\r\n}\r\n\r\ninterface SetLoadingAction {\r\n  type: typeof SET_LOADING;\r\n}\r\n\r\ninterface SetErrorAction {\r\n  type: typeof SET_ERROR;\r\n  payload: string;\r\n}\r\n\r\nexport type WeatherAction =\r\n  | GetWeatherAction\r\n  | SetLoadingAction\r\n  | SetErrorAction;\r\n\r\nexport interface AlertAction {\r\n  type: typeof SET_ALERT;\r\n  payload: string;\r\n}\r\n\r\nexport interface AlertState {\r\n  message: string;\r\n}\r\n","import { SET_ALERT, AlertAction } from \"../types\";\r\n\r\nexport const setAlert = (message: string): AlertAction => {\r\n  return {\r\n    type: SET_ALERT,\r\n    payload: message,\r\n  };\r\n};\r\n","import { RootState } from \"./../index\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport {\r\n  WeatherAction,\r\n  WeatherData,\r\n  WeatherError,\r\n  GET_WEATHER,\r\n  SET_LOADING,\r\n  SET_ERROR,\r\n} from \"../types\";\r\n\r\nconst API_KEY = \"b507e96b292080e77f64ceeb3b322f29\";\r\n\r\nexport const getWeather = (\r\n  city: string\r\n): ThunkAction<void, RootState, null, WeatherAction> => {\r\n  return async (dispatch) => {\r\n    try {\r\n      {\r\n        console.log(API_KEY);\r\n      }\r\n      const res = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=${API_KEY}`\r\n      );\r\n\r\n      if (!res.ok) {\r\n        const resData: WeatherError = await res.json();\r\n        throw new Error(resData.message);\r\n      }\r\n\r\n      const resData: WeatherData = await res.json();\r\n      dispatch({\r\n        type: GET_WEATHER,\r\n        payload: resData,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: SET_ERROR,\r\n        payload: err.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setLoading = (): WeatherAction => {\r\n  return {\r\n    type: SET_LOADING,\r\n  };\r\n};\r\n\r\nexport const setError = (): WeatherAction => {\r\n  return {\r\n    type: SET_ERROR,\r\n    payload: \"\",\r\n  };\r\n};\r\n","import React, { FC, FormEvent, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { setAlert } from \"../../store/actions/alertActions\";\r\nimport { getWeather, setLoading } from \"../../store/actions/weatherActions\";\r\n\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nimport \"./styled.scss\";\r\n\r\ninterface SearchProps {\r\n  title: string;\r\n}\r\n\r\nconst Search: FC<SearchProps> = ({ title }) => {\r\n  const dispatch = useDispatch();\r\n  const [city, setCity] = useState(\"\");\r\n\r\n  const changeHandler = (e: FormEvent<HTMLInputElement>) => {\r\n    setCity(e.currentTarget.value);\r\n  };\r\n\r\n  const submitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (city.trim() === \"\") {\r\n      return dispatch(setAlert(\"City is required\"));\r\n    }\r\n\r\n    dispatch(setLoading());\r\n    dispatch(getWeather(city));\r\n    setCity(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>{title}</h1>\r\n      <form className=\"search-form\" onSubmit={submitHandler}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"search-input\"\r\n          value={city}\r\n          onChange={changeHandler}\r\n        />\r\n        <div className=\"submit-btn\">\r\n          <SearchIcon />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { FC } from \"react\";\r\nimport { AlertAction } from \"../../store/types\";\r\n\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport \"./styled.scss\";\r\n\r\ninterface AlertProps {\r\n  message: string;\r\n  onClose: () => void;\r\n}\r\n\r\nconst Alert: FC<AlertProps> = ({ message, onClose }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"modal-bg\" onClick={onClose}></div>\r\n      <div className=\"modal-card\">\r\n        <header className=\"modal-header\">\r\n          <p className=\"modal-message\">{message}</p>\r\n        </header>\r\n        <footer>\r\n          <div className=\"close-btn\">\r\n            <CloseIcon onClick={onClose} />\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { FC } from \"react\";\r\nimport { WeatherAction, WeatherData } from \"../../store/types\";\r\n\r\nimport \"./styled.scss\";\r\n\r\ninterface WeatherProps {\r\n  data: WeatherData;\r\n}\r\n\r\nconst Weather: FC<WeatherProps> = ({ data }) => {\r\n  const fahrenheit = (data.main.temp * 1.8 - 469.67).toFixed(2);\r\n  const celsius = (data.main.temp - 273.15).toFixed(2);\r\n\r\n  return (\r\n    <section className=\"section\">\r\n      <div className=\"container\">\r\n        <h1 className=\"title\">\r\n          {data.name} - {data.sys.country}\r\n        </h1>\r\n\r\n        <div className=\"results\">\r\n          <div className=\"level\">\r\n            <p className=\"heading\">{data.weather[0].description}</p>\r\n            <p>\r\n              <img\r\n                src={`http://openweathermap.org/img/wn/${data.weather[0].icon}.png`}\r\n                alt=\"image\"\r\n              />\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"temperature\">\r\n            <p className=\"results-title\">Temperature</p>\r\n            <p>{data.main.temp}K</p>\r\n            <p>{fahrenheit}F</p>\r\n            <p>{celsius}C</p>\r\n          </div>\r\n\r\n          <div className=\"humidity\">\r\n            <p className=\"results-title\">Humidity</p>\r\n            <p>{data.main.humidity}</p>\r\n          </div>\r\n\r\n          <div className=\"pressure\">\r\n            <p className=\"results-title\">Pressure</p>\r\n            <p>{data.main.pressure}</p>\r\n          </div>\r\n\r\n          <div className=\"wind\">\r\n            <p className=\"results-title\">Wind</p>\r\n            <p>{data.wind.speed} m/s</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import React, { FC } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { RootState } from \"./store\";\n\nimport Search from \"./components/Search\";\nimport Alert from \"./components/Alert\";\nimport Weather from \"./components/Weather\";\n\nimport { setAlert } from \"./store/actions/alertActions\";\nimport { setError } from \"./store/actions/weatherActions\";\n\nimport \"./App.scss\";\n\nconst App: FC<{}> = () => {\n  const dispatch = useDispatch();\n  const weatherData = useSelector((state: RootState) => state.weather.data);\n  const loading = useSelector((state: RootState) => state.weather.loading);\n  const error = useSelector((state: RootState) => state.weather.error);\n  const alertMessage = useSelector((state: RootState) => state.alert.message);\n\n  return (\n    <div>\n      <Search title=\"Enter city name\" />\n      {loading ? (\n        <h2>Loading...</h2>\n      ) : (\n        weatherData && <Weather data={weatherData} />\n      )}\n      {alertMessage && (\n        <Alert message={alertMessage} onClose={() => dispatch(setAlert(\"\"))} />\n      )}\n      {error && (\n        <Alert message={error + \" :(\"} onClose={() => dispatch(setError())} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import {\r\n  WeatherState,\r\n  WeatherAction,\r\n  GET_WEATHER,\r\n  SET_LOADING,\r\n  SET_ERROR,\r\n} from \"../types\";\r\n\r\nconst initialState: WeatherState = {\r\n  data: null,\r\n  loading: false,\r\n  error: \"\",\r\n};\r\n\r\nexport default (state = initialState, action: WeatherAction): WeatherState => {\r\n  switch (action.type) {\r\n    case GET_WEATHER:\r\n      return {\r\n        data: action.payload,\r\n        loading: false,\r\n        error: \"\",\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case SET_ERROR: {\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { AlertAction, AlertState, SET_ALERT } from \"../types\";\r\n\r\nconst initialState: AlertState = {\r\n  message: \"\",\r\n};\r\n\r\nexport default (state = initialState, action: AlertAction): AlertState => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return {\r\n        message: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport weatherReducer from \"./reducers/weatherReducer\";\r\nimport alertReducer from \"./reducers/alertReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  weather: weatherReducer,\r\n  alert: alertReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}